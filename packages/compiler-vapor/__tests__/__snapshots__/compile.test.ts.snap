// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compile > bindings 1`] = `
"import { template, children, createTextNode, insert, effect, setText } from 'vue/vapor';
const t0 = template('<div>count is <!>.</div>');
export function render() {
  const n0 = t0();
  const {
    0: [
      n3,
      {
        1: [n2],
      },
    ],
  } = children(n0);
  const n1 = createTextNode(count.value);
  insert(n1, n3, n2);
  effect(() => {
    setText(n1, undefined, count.value);
  });
  return n0;
}
"
`;

exports[`compile > directives > v-bind > simple expression 1`] = `
"import { template, children, effect, setAttr } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  effect(() => {
    setAttr(n1, 'id', undefined, id.value);
  });
  return n0;
}
"
`;

exports[`compile > directives > v-html > no expression 1`] = `
"import { template, children, effect, setHtml } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  effect(() => {
    setHtml(n1, undefined, '');
  });
  return n0;
}
"
`;

exports[`compile > directives > v-html > simple expression 1`] = `
"import { template, children, effect, setHtml } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  effect(() => {
    setHtml(n1, undefined, code.value);
  });
  return n0;
}
"
`;

exports[`compile > directives > v-on > event modifier 1`] = `
"import { template, children, effect, withModifiers, on } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  effect(() => {
    on(n1, 'click', withModifiers(handleClick, ['prevent', 'stop']));
  });
  return n0;
}
"
`;

exports[`compile > directives > v-on > simple expression 1`] = `
"import { template, children, effect, on } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  effect(() => {
    on(n1, 'click', handleClick);
  });
  return n0;
}
"
`;

exports[`compile > directives > v-once > as root node 1`] = `
"import { template, children, effect, setAttr } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  effect(() => {
    setAttr(n1, 'id', undefined, foo);
  });
  return n0;
}
"
`;

exports[`compile > directives > v-once > basic 1`] = `
"import { template, children, createTextNode, setText, setAttr, prepend } from 'vue/vapor';
const t0 = template('<div> <span></span></div>');
export function render() {
  const n0 = t0();
  const {
    0: [
      n3,
      {
        1: [n2],
      },
    ],
  } = children(n0);
  const n1 = createTextNode(msg.value);
  setText(n1, undefined, msg.value);
  setAttr(n2, 'class', undefined, clz.value);
  prepend(n3, n1);
  return n0;
}
"
`;

exports[`compile > directives > v-text > no expression 1`] = `
"import { template, children, effect, setText } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  effect(() => {
    setText(n1, undefined, '');
  });
  return n0;
}
"
`;

exports[`compile > directives > v-text > simple expression 1`] = `
"import { template, children, effect, setText } from 'vue/vapor';
const t0 = template('<div></div>');
export function render() {
  const n0 = t0();
  const {
    0: [n1],
  } = children(n0);
  effect(() => {
    setText(n1, undefined, str.value);
  });
  return n0;
}
"
`;

exports[`compile > dynamic root 1`] = `
"import { fragment, createTextNode, append, effect, setText } from 'vue/vapor';
export function render() {
  const t0 = fragment();
  const n0 = t0();
  const n1 = createTextNode(1);
  const n2 = createTextNode(2);
  append(n0, n1, n2);
  effect(() => {
    setText(n1, undefined, 1);
  });
  effect(() => {
    setText(n2, undefined, 2);
  });
  return n0;
}
"
`;

exports[`compile > dynamic root nodes and interpolation 1`] = `
"import { template, children, createTextNode, prepend, insert, append, effect, on, setAttr, setText } from 'vue/vapor';
const t0 = template('<button>foo<!>foo</button>');
export function render() {
  const n0 = t0();
  const {
    0: [
      n1,
      {
        1: [n5],
      },
    ],
  } = children(n0);
  const n2 = createTextNode(count);
  const n3 = createTextNode(count);
  const n4 = createTextNode(count);
  prepend(n1, n2);
  insert(n3, n1, n5);
  append(n1, n4);
  effect(() => {
    on(n1, 'click', handleClick);
  });
  effect(() => {
    setAttr(n1, 'id', undefined, count);
    setText(n2, undefined, count);
    setText(n3, undefined, count);
    setText(n4, undefined, count);
  });
  return n0;
}
"
`;

exports[`compile > fragment 1`] = `
"import { template } from 'vue/vapor';
const t0 = template('<p></p><span></span><div></div>');
export function render() {
  const n0 = t0();
  return n0;
}
"
`;

exports[`compile > static + dynamic root 1`] = `
"import { template, children, createTextNode, prepend, insert, append, effect, setText } from 'vue/vapor';
const t0 = template('3<!>6<!>9');
export function render() {
  const n0 = t0();
  const {
    1: [n9],
    3: [n10],
  } = children(n0);
  const n1 = createTextNode(1);
  const n2 = createTextNode(2);
  const n3 = createTextNode(4);
  const n4 = createTextNode(5);
  const n5 = createTextNode(7);
  const n6 = createTextNode(8);
  const n7 = createTextNode('A');
  const n8 = createTextNode('B');
  prepend(n0, n1, n2);
  insert([n3, n4], n0, n9);
  insert([n5, n6], n0, n10);
  append(n0, n7, n8);
  effect(() => {
    setText(n1, undefined, 1);
  });
  effect(() => {
    setText(n2, undefined, 2);
  });
  effect(() => {
    setText(n3, undefined, 4);
  });
  effect(() => {
    setText(n4, undefined, 5);
  });
  effect(() => {
    setText(n5, undefined, 7);
  });
  effect(() => {
    setText(n6, undefined, 8);
  });
  effect(() => {
    setText(n7, undefined, 'A');
  });
  effect(() => {
    setText(n8, undefined, 'B');
  });
  return n0;
}
"
`;

exports[`compile > static template 1`] = `
"import { template } from 'vue/vapor';
const t0 = template('<div><p>hello</p><input><span></span></div>');
export function render() {
  const n0 = t0();
  return n0;
}
"
`;
